%YAML 1.2
---
# TODO: group these according to their logical steps
# TODO: consider the best names for each setting and review settings
# TODO: Specify Deuterater working directory and program directory
# TODO: Organize settings into


# Debugging level, using the level keys listed below
# Level 0: Runs normally (multiprocessing and all)
# Level 1: Runs non-distributed on a single processor
debug_level: !!int 0

# Whether to automate the partitioning logic
recognize_available_cores: !!bool True

# This will be used if automation fails or is set to False
n_processors: !!int 2

# ID file retention time unit
#   Set to "sec" for seconds or "min" for minutes
id_file_rt_unit: !!str "sec"

# Whether ID's that are at the beginning and end of an mzML's RT should be excluded.
#   An ID is removed if its time_window results in looking outside of the mzML's bounds.
#   i.e. An ID with a rt of 1 would be trimmed when the time_window is 1.5
trim_ids_to_mzml_bounds: !!bool False

# chunk size, given in observations
chunk_size: !!int 50

# If a file is less than "chunking_method_threshold" times
#   "max_chunk_size" lines long, then split the identification
#   file evenlu among the processors
chunking_method_threshold: 2

# NOTE: antilog(angle) was used previously. Possibly for control
# Maximum valid angle for condensing scans together
max_valid_angle: !!float 1.2


# this is the denominator for the ratio for accepting envelopes
peak_ratio_denominator: !!int 10

# Time to look in each direction when extracting mzml data
time_window: !!float 1.5

# Tolerance for differences in parts per million measurements
# DEBUG: set back to 30 when done
ppm_window: !!int 30

# Labeling schema key
label_key:  !!str "tissue"

# labeling sites key needs to be here and in the other id in case usere isn't using peaks
aa_labeling_sites_path: "aa_labeling_sites.tsv"

# Peak lookback
peak_lookback: !!int 1

peak_lookahead: !!int 1

baseline_lookback: !!int 100

min_envelopes_to_combine: !!int 10

zscore_cutoff: !!float 1

# min sequence allowed for peptides
min_aa_sequence_length: !!int 6

# minimum allowed n value. if smaller, the maximum theoretical delta will be
# too small
min_allowed_n_values: !!int 2

minimum_allowed_sequence_rate: !!float 0.0

maximum_allowed_sequence_rate: !!float 1.5

# A filter used in many areas for scan combining. If a neutromer peak is below the
# a intensity filter, it is not considered to gaussian fitting and is not considered
# a valid scan. Default = 20k
intensity_filter: !!int 20000

ms_level: !!int 1

#The file output the rate groups should be
# Default = png. Available: png, pdf, svg
graph_output_format: !!str "png"

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$ change based on instrument and settings

# How many scans should be looked at when performing a gaussian filter
# on the scan intensities. Must be an odd number. Default is 9
sampling_rate: !!int 9

# How many scans should be looked at when using a simple smoothing width. Default = 49 for peptides
smoothing_width: !!int 49

# What order the simple smoothing algorithm should be used. Default = 3.
smoothing_order: !!int 3

# The amount of time in minutes that peaks can vary by between charges/adducts to be
# considered the same. Default = 0.1 for intrafile .2 for interfile
allowed_peak_variance_min: !!float 0.1

# THe amount of scans allowed between neutromer peaks to be considered a valid peak.
# Default = 64 for Orbi (proteins)
allowed_neutromer_peak_variance: !!int 64

# $$$$$$$$$$$$$$$$$$$$$$$$$$$$$ change based on instrument and settings

# A value used to determine how close to baseline the gaussian fitting algorithm
# peak widths will be chosen from. Default is .9 (90%)
rel_height: !!float .9

# THe weight that should be used for adduct reproducibility when calculating the score for
# chromatography peak picking. Default = 1.0
adduct_weight: !!float 1.0

# The weight that should be used for neutromer peak variance when calculating the score for
# chromatography peak picking. Default = 1.0
variance_weight: !!float 1.0

# The weight that should be used for distance from the ID File's RT when calculating the score for
# chromatography peak picking. Default = 0.7
ID_weight: !!float 0.7

# The weight that should be used for the intensity when calculating the score for
# chromatography peak picking. Default = 0.6
intensity_weight: !!float 0.6

# What created EIC should chromatography be divided on. default = "combined"
# Other options, "m0", "m1", "m2"
how_divided: !!str "combined"

# If Chromatography Division should be used in the extractor. If so, if interfile or
# intrafile comparison should be completed.
use_chromatography_division: !!str "No"

#$the next 3 are the std dev filter for the agreement of the frac new peaks
#$ for the 3 calculation types
# TODO: Do we need these anymore? - Ben Driggs
abundance_agreement_filter: !!float 0.10 # Remove filters CQ - 15 Sept 2021

spacing_agreement_filter: !!float 0.10 # Remove filters CQ - 15 Sept 2021

combined_agreement_filter: !!float 0.10 # Remove filters CQ - 15 Sept 2021

#$need the manual biases
abundance_manual_bias: !!float 0.0000

spacing_manual_bias: !!float 0.000

combined_manual_bias: !!float 0.0000

#$whether to use fixed or variable asymptotes
asymptote: !!str "Variable"

#$if a point in roll up has 0 error it will skew the graph, when it should
#$ be looked at skeptically for a lack of replicates
error_of_non_replicated_point: !!float .05

#$error of the pre-set zero point
error_of_zero: !!float 0.01

#$if asymptote is fixed we need the actual asymptote value to use
fixed_asymptote_value: !!float 1.00

#$what column to sort on before rate calculations
peptide_analyte_id_column: !!str "Protein_ID"

#$common name for ease of identification
peptide_analyte_name_column: !!str "Protein_Name"

lipid_analyte_id_column: !!str "Lipid Unique Identifier"

lipid_analyte_name_column: !!str "Lipid Name"

# Minimum amount of nonzero points
minimum_nonzero_points: !!int 3

#$need to adjust for cell proliferation
proliferation_adjustment: !!float 0.00

# Disable all filtering criteria that could make values be excluded from rates after extraction.
remove_filters: !!bool False

#$whether or not to use the roll up option
use_outlier_removal: !!bool False

# The Signal/Noise filter used in Chromatography Division
s_n_filter: !!float 0

# Treat each adduct for a lipid as a different rate curve.
separate_adducts: !!bool False

#$column to get the number of unique sequences used for a fit
#$this is made for peptide sequences in proteins, but could be used for
#$ other metrics (or just used for the id or name to make it useless but
#$not error out)
unique_sequence_column: !!str "Sequence"

#$If the empirically derived n-value should be used instead of the literature.
#$We should be using the literature n-value for peptides.
use_empir_n_value: !!bool True

#$Decides how the abundance fraction new "abund_fn" is calculated.
#$ No = Not Calculated
#$ M0 = Use the M0's FN as the abund_fn
#$ avg = Use the median FN as the abund_fn
#$ highest = Use the most intense neutromer's FN as the abund_fn
abundance_type: !!str "M0"

bias_calculation: !!str "none"

verbose_rate: !!bool True

#$ allows adjustment of y intercept (avoids hard coding)
y_intercept_of_fit: !!float 0.0000

#TODO: write accurate description - Ben D
max_fn_standard_deviation: 0.1

# determines what type of fraction new calculation DeuteRater will use
# will affect fraction new calculations and rate calculations/graphing
fraction_new_calculation: !!str combined

# used to filter out n_values that have a high cv ratio (stddev / n_value)
n_value_cv_limit: !!float 0.10

# used to separate graphs into two folders: 'good' r2 values and 'poor' r2 values
r2_threshold: !!float 0.5

# used to make graphs visualizing the empirical n-value calculation process
# Recommend you use this rarely as it will greatly increase runtime
graph_n_value_calculations: !!bool False

# setting to turn on the n-value calculation data .tsv output
save_n_value_data: !!bool False

max_allowed_enrichment: !!float 1.0

# Set to true when you want ot use unique retention times across mzML files
use_individual_rts: !!bool False

# toggle whether you want to interpolate n-values in n-value calculation module
interpolate_n_values: !!bool False

# sets the threshold for median first derivative filter during n-value calculations
med_derivative_limit: !!float 0.2

# sets limit for n-value standard deviations that will be accepted
nv_stddev_limit: !!float 0.05
